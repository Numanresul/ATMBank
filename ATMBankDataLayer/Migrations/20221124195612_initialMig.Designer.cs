// <auto-generated />
using System;
using ATMBankDataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ATMBankDataLayer.Migrations
{
    [DbContext(typeof(ATMBankDBContext))]
    [Migration("20221124195612_initialMig")]
    partial class initialMig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ATMBankEntitiesLayer.AccountHistories", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("CustomersId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CustomersId");

                    b.ToTable("AccountHistories");
                });

            modelBuilder.Entity("ATMBankEntitiesLayer.BalanceAccounts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("CurrenciesId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnType("numeric");

                    b.Property<Guid>("CustomersId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CurrenciesId");

                    b.HasIndex("CustomersId");

                    b.ToTable("BalanceAccounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6f53285b-002f-4411-ad9c-b26d0a6b0ca5"),
                            CreatedAt = new DateTime(2022, 11, 24, 22, 56, 12, 706, DateTimeKind.Local).AddTicks(7679),
                            CreatedBy = "Default",
                            CurrenciesId = new Guid("2627f7e3-b14c-4fa2-a342-2dc4b765f32f"),
                            CurrentBalance = 1500m,
                            CustomersId = new Guid("120276a7-bcb7-4f5d-965a-88df78d06d3b"),
                            Deleted = false,
                            UpdatedAt = new DateTime(2022, 11, 24, 22, 56, 12, 706, DateTimeKind.Local).AddTicks(7680),
                            UpdatedBy = "Default"
                        },
                        new
                        {
                            Id = new Guid("7b6e9787-7218-4c41-8e46-468f316db478"),
                            CreatedAt = new DateTime(2022, 11, 24, 22, 56, 12, 706, DateTimeKind.Local).AddTicks(7695),
                            CreatedBy = "Default",
                            CurrenciesId = new Guid("d65f4d92-a79b-4a52-a05a-a4b96f72e7e1"),
                            CurrentBalance = 100m,
                            CustomersId = new Guid("120276a7-bcb7-4f5d-965a-88df78d06d3b"),
                            Deleted = false,
                            UpdatedAt = new DateTime(2022, 11, 24, 22, 56, 12, 706, DateTimeKind.Local).AddTicks(7695),
                            UpdatedBy = "Default"
                        });
                });

            modelBuilder.Entity("ATMBankEntitiesLayer.Currencies", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AccountType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d65f4d92-a79b-4a52-a05a-a4b96f72e7e1"),
                            AccountType = 3,
                            CreatedAt = new DateTime(2022, 11, 24, 22, 56, 12, 706, DateTimeKind.Local).AddTicks(7646),
                            CreatedBy = "Default",
                            CurrencyName = "USD",
                            Deleted = false,
                            UpdatedAt = new DateTime(2022, 11, 24, 22, 56, 12, 706, DateTimeKind.Local).AddTicks(7646),
                            UpdatedBy = "Default"
                        },
                        new
                        {
                            Id = new Guid("71196b7a-a648-4e9f-bc51-c4235fb44696"),
                            AccountType = 2,
                            CreatedAt = new DateTime(2022, 11, 24, 22, 56, 12, 706, DateTimeKind.Local).AddTicks(7658),
                            CreatedBy = "Default",
                            CurrencyName = "EUR",
                            Deleted = false,
                            UpdatedAt = new DateTime(2022, 11, 24, 22, 56, 12, 706, DateTimeKind.Local).AddTicks(7659),
                            UpdatedBy = "Default"
                        },
                        new
                        {
                            Id = new Guid("2627f7e3-b14c-4fa2-a342-2dc4b765f32f"),
                            AccountType = 1,
                            CreatedAt = new DateTime(2022, 11, 24, 22, 56, 12, 706, DateTimeKind.Local).AddTicks(7667),
                            CreatedBy = "Default",
                            CurrencyName = "TRY",
                            Deleted = false,
                            UpdatedAt = new DateTime(2022, 11, 24, 22, 56, 12, 706, DateTimeKind.Local).AddTicks(7668),
                            UpdatedBy = "Default"
                        });
                });

            modelBuilder.Entity("ATMBankEntitiesLayer.Customers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<long>("IdentityNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Pin")
                        .HasColumnType("bigint");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("120276a7-bcb7-4f5d-965a-88df78d06d3b"),
                            CreatedAt = new DateTime(2022, 11, 24, 22, 56, 12, 706, DateTimeKind.Local).AddTicks(7531),
                            CreatedBy = "Default",
                            Deleted = false,
                            IdentityNumber = 111222333444L,
                            Name = "Numan",
                            Pin = 1234L,
                            Surname = "Kul",
                            UpdatedAt = new DateTime(2022, 11, 24, 22, 56, 12, 706, DateTimeKind.Local).AddTicks(7542),
                            UpdatedBy = "Default"
                        });
                });

            modelBuilder.Entity("ATMBankEntitiesLayer.AccountHistories", b =>
                {
                    b.HasOne("ATMBankEntitiesLayer.Customers", "Customers")
                        .WithMany("AccountHistories")
                        .HasForeignKey("CustomersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customers");
                });

            modelBuilder.Entity("ATMBankEntitiesLayer.BalanceAccounts", b =>
                {
                    b.HasOne("ATMBankEntitiesLayer.Currencies", "Currencies")
                        .WithMany("BalanceAccounts")
                        .HasForeignKey("CurrenciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATMBankEntitiesLayer.Customers", "Customers")
                        .WithMany("BalanceAccounts")
                        .HasForeignKey("CustomersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currencies");

                    b.Navigation("Customers");
                });

            modelBuilder.Entity("ATMBankEntitiesLayer.Currencies", b =>
                {
                    b.Navigation("BalanceAccounts");
                });

            modelBuilder.Entity("ATMBankEntitiesLayer.Customers", b =>
                {
                    b.Navigation("AccountHistories");

                    b.Navigation("BalanceAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
